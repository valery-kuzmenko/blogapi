imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: @BloggerBlogBundle/Resources/config/services.yml}

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_rest:
    disable_csrf_role: ROLE_API
    #reading parameters from request
    param_fetcher_listener: true
    view:
        #???
        mime_types:
            json: ['application/json', 'application/json;version=1.0', 'application/json;version=1.1']
#make possible to return view object from controller instead of using handleView method, uses fos_rest.view_handler service
#if use 'true' rendering will be delegated to SensioFrameworkExtraBundle.
#we need to disable view annotations, to fos_rest bundle begin to handle by annotations
#sensio_framework_extra:
#view:    { annotations: false }
#@View(statusCode=204)
#@View(serializerGroups={"group1", "group2"})
#@View(serializerEnableMaxDepthChecks=true)   
#@View(populateDefaultVars=false) - remove  request attributes  from view
        view_response_listener: 'force'
        #???
        formats:
            json: true
        #???
        templating_formats: 
            #???
            html: true
    format_listener:
        #determinates the correct response format
        rules: 
            - {path: ^/, priorities: [json, html], fallback_format: ~ ,prefer_extension: true}
        #???
        media_type:
            version_regex: '/(v|version)=(?P<version>[0-9\.]+)/'
    exception:
        codes:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException' : 404
            'Doctrine\ORM\OptimisticLockException' : HTTP_CONFLICT
        messages:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException' : true
    allowed_methods_listener : true
    access_denied_listener:
        json: true
    # transforms the request content in the request
    body_listener: 
        array_normalizer: fos_rest.normalizer.camel_keys 
    
    service:
        view_handler: blogger_blog.view_handler        

sensio_framework_extra:
    view: {annotations : false}
